upstream localhost {
  server 127.0.0.1:1980;
  keepalive 64;
}

map $http_host $prefix {
      default "";
}

#Formato de log
log_format combined_ssl '$remote_addr - $remote_user [$time_local] '
                        '$ssl_protocol/$ssl_cipher '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

#Healthy check port 80
server {
      listen       80;
      server_name _;
      access_log /var/log/nginx/revproxy_healthcheck-80.log;
      error_log /var/log/nginx/revproxy_healthcheck-80.log;
      location /_proxy/healthcheck {
         return 200 '{"status": "ok", "message": "proxy is in service"}';
         add_header Content-Type application/json;
      }
}
#Healthy check port 443
server {
      listen 443 ssl http2;
      server_name _;
      access_log /var/log/nginx/revproxy_healthcheck-443.log;
      error_log /var/log/nginx/revproxy_healthcheck-443.log;
      ssl_certificate /etc/nginx/ssl/wildcard.midomain.net.crt;
      ssl_certificate_key /etc/nginx/ssl/wildcard.midomain.net.key;
      location /_proxy/healthcheck {
         return 200 '{"status": "ok", "message": "proxy is in service"}';
         add_header Content-Type application/json;
      }
}

server {
      listen 443 ssl http2;
      server_name newrelic.midomain.net;
      access_log  /var/log/nginx/newrelic.midomain.net-access-443.log combined;
      error_log   /var/log/nginx/newrelic.midomain.net-error-443.log info;
      ssl_certificate /etc/nginx/ssl/wildcard.midomain.net.crt;
      ssl_certificate_key /etc/nginx/ssl/wildcard.midomain.net.key;
      proxy_ssl_verify              off;
      ssl_protocols TLSv1.2;
      proxy_ssl_server_name on;

      ssl_stapling on;
      ssl_stapling_verify on;
      add_header Strict-Transport-Security "max-age=15768000;" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Xss-Protection "1; mode=block" always;

      location ~ ^/js/{
        proxy_pass https://js-agent.newrelic.com;
        rewrite /js/(.*) /$1  break;
        proxy_buffering on;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header Host js-agent.newrelic.com;
        proxy_ssl_name js-agent.newrelic.com;
        proxy_ssl_server_name on;
        proxy_ssl_session_reuse off; 
      }
      
      location ~ ^/api/{
        proxy_pass https://bam-cell.nr-data.net;
        rewrite /api/(.*) /$1  break;
        proxy_buffering on;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header Host bam-cell.nr-data.net;
        proxy_ssl_name bam-cell.nr-data.net;
        proxy_ssl_server_name on;
        proxy_ssl_session_reuse off;
      }   
}

server {
    listen 80;
    server_name newrelic.midomain.net;
    access_log  /var/log/nginx/newrelic.midomain.net-access-80.log combined;
    error_log   /var/log/nginx/newrelic.midomain.net-error-80.log info;
    rewrite ^(.*)$ https://${server_name}$1 permanent;
}
